ASL func3
(* Test for getters setters. *)

{}

accessor f1() <=> v: integer
begin
  getter
    return 3;
  end;

  setter
    pass;
    // Hahaha, as if I was to do anything with the value
  end;
end;

accessor f2(x:integer) <=> v: integer
begin
  getter
    return f1() + x;
  end;

  setter
    f1() = v + x;
  end;
end;

var f3_storage: integer = -1;
var f4_storage: integer = -1;

accessor f3(x:integer) <=> v: integer
begin
  getter
    return f3_storage;
  end;

  setter
    f3_storage = x;
  end;
end;

accessor f4(x:integer) <=> v: integer
begin
  getter
    return f4_storage;
  end;

  setter
    f4_storage = v;
  end;
end;

func main() => integer
begin
  f1() = f1();
  // f1 = f1; // Illegal
  let a = f1();
  let b = f1();
  let c = f2(4);
  f2(5) = 6;
  f3(12) = 13;
  f4(14) = 15;

  return 0;
end;

forall(
     0: main.0.a = 3
  /\ 0: main.0.b = 3
  /\ 0: main.0.c = 7
  /\ 0: f3_storage = 12
  /\ 0: f4_storage = 15
)

